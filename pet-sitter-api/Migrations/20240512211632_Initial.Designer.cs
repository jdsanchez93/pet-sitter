// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pet_sitter_api;

#nullable disable

namespace pet_sitter_api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240512211632_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NotePhoto", b =>
                {
                    b.Property<int>("NotesNoteId")
                        .HasColumnType("int");

                    b.Property<int>("PhotosPhotoId")
                        .HasColumnType("int");

                    b.HasKey("NotesNoteId", "PhotosPhotoId");

                    b.HasIndex("PhotosPhotoId");

                    b.ToTable("NotePhoto");
                });

            modelBuilder.Entity("pet_sitter_api.Entities.Note", b =>
                {
                    b.Property<int>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("NoteId");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("pet_sitter_api.Entities.Photo", b =>
                {
                    b.Property<int>("PhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("S3Key")
                        .HasColumnType("longtext");

                    b.HasKey("PhotoId");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("NotePhoto", b =>
                {
                    b.HasOne("pet_sitter_api.Entities.Note", null)
                        .WithMany()
                        .HasForeignKey("NotesNoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pet_sitter_api.Entities.Photo", null)
                        .WithMany()
                        .HasForeignKey("PhotosPhotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
